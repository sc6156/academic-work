<?php
/* This page takes the user's logon details from the html form in the 
sign_in.php page and authenticates them. If valid, the user is informed 
they are successfully signed in, then they are redirected to the page they 
were visiting before the sign_in.php page. If their details are invalid, 
they are shown the errors then redirected back to the sign_in.php page.
*/

require_once($_SERVER['DOCUMENT_ROOT']."/PE7045/assets/scripts/functions.php");
startSession();
echo createHead("Authenticating");

echo '<body>';
  echo '<div id="page_container">';
  
  createHeader(); 

  echo '<div class="clear"></div>';
  
  /* 'Main' authentication program control logic. Separate the array returned by 
  validate_logon into two separate variables, each of which is also an array */
  
  list($input, $errors) = validate_logon();
  
  if ($errors) {
    echo show_form($errors);
	header('Refresh: 3; url=sign_in.php');
  }
  else {
    echo "<p>Hello ".$_SESSION['name'].", welcome back to coorie. You are now signed in.</p>\n";
	
	/*Redirect user to page they were previously on using session variable obtained at sign_in.php. 
	If the variable is null, redirect to homepage */
	$link = isset($_SESSION['link']) ? $_SESSION['link'] : null;
	if(is_null($link)) {
      header('Refresh: 1; url=home.php');
	}
    else {
      header('Refresh: 1; url='.$link);
    }		
  }

  // Function to process data entered into the html form on sign_in.php 
  function validate_logon () {
	$input = array();	// Create an empty array to hold the form input
	$errors = array();	// Create an empty array to hold error messages

	// Retrieve parameters and store in the $input array, then trim and store the modified value
	$input['email'] = array_key_exists('email', $_REQUEST) ? $_REQUEST['email'] : null;
	$input['email'] = trim($input['email']);
	$input['password'] = array_key_exists('password',$_REQUEST) ? $_REQUEST['password'] : null;
	$input['password'] = trim($input['password']);
	
	
	// Check that the user has entered data into email and password fields 
	if (empty($input['email']) || empty($input['password'])) {
	  $errors[] = "A username and/or a password have not been entered.";
	}
	else {
      // Clear any session setting that might be left from a previous session
      unset($_SESSION['logged-in']);

	  $conn = getConnection();
	  
	  /* Use email address entered to search the database for a match. At the registration stage,
	  users cannot enter an email that is already in the database, so it is a unique identifier. */
	  $querySQL = "SELECT password_hash, customer_forename, customerID FROM customers WHERE email_address = ?";
		
	  // Prepare the sql statement 
	  $stmt = mysqli_prepare($conn, $querySQL);

	  //Bind variable to the prepared statement as parameter
	  mysqli_stmt_bind_param($stmt,"s",$input['email']);
		
	  // Execute the query and get the result
      mysqli_stmt_execute($stmt);
      $queryresult = mysqli_stmt_get_result($stmt);
	  $userRow = mysqli_fetch_assoc($queryresult);

	  if($userRow) {
		//Get the password hash from the database associated with the email address entered by the user   
		$passwordHash = $userRow['password_hash'];
		  
		//Check if the hash generated by the password entered by the user matches the stored hash and respond accordingly   
		if(password_verify($input['password'], $passwordHash)) {
	      $_SESSION['logged-in'] = true;
	      $_SESSION['name'] = $userRow['customer_forename'];
		  $_SESSION['userID'] = $userRow['customerID'];
		}
		else {
		  $errors[] = "The password that was entered was incorrect."; 
		}
	  }
	  // Tell the user if the email they entered isn't in the database 
	  else {
	    $errors[] = "The email address entered is not recognised.";
	  }
	}
	return array ($input, $errors);
  }

  // Function to display any errors and show the logon form again
  function show_form( array $errors) {
    $error_output = "<p>The following problem(s) occurred when trying to process your request:<br>\n ";
    foreach ($errors as $errorItem) {
	  $error_output .= "$errorItem\n";
	}
	$error_output .= "<p><br>Please try again after you are redirected to the sign in page.</p>\n";
	return $error_output;
  }

  echo '</div>';
echo '</body>';
echo '</html>';
?>